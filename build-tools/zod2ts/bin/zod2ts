#!/usr/bin/env node

// This is a bin stub that allows running the tool directly
// It uses tsx to execute the TypeScript source directly

import { spawn } from 'node:child_process';
import { fileURLToPath } from 'node:url';
import { dirname, join } from 'node:path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Path to the main TypeScript file
const mainFile = join(__dirname, '..', 'src', 'index.ts');

// Check if tsx is available
async function checkTsx() {
  try {
    const { execSync } = await import('node:child_process');
    execSync('tsx --version', { stdio: 'ignore' });
    return true;
  } catch {
    return false;
  }
}

// Main execution function
async function main() {
  const tsxAvailable = await checkTsx();
  
  if (!tsxAvailable) {
    console.error('❌ Error: tsx is not installed. Please install it globally:');
    console.error('   npm install -g tsx');
    console.error('   or');
    console.error('   pnpm add -g tsx');
    process.exit(1);
  }

  // Spawn tsx process with the main file and all arguments
  const child = spawn('tsx', [mainFile, ...process.argv.slice(2)], {
    stdio: 'inherit',
    shell: true
  });

  child.on('error', (error) => {
    console.error('❌ Error executing tsx:', error.message);
    process.exit(1);
  });

  child.on('exit', (code) => {
    process.exit(code || 0);
  });
}

main().catch((error) => {
  console.error('❌ Unexpected error:', error);
  process.exit(1);
}); 